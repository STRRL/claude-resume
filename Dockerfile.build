# Multi-stage builder for cross-platform builds
FROM golang:1.23-bookworm AS builder-base

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    git \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Linux AMD64 build
FROM builder-base AS linux-amd64
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 \
    go build -ldflags="-s -w" \
    -o claude-resume-linux-amd64 ./cmd/claude-resume

# Linux ARM64 build
FROM builder-base AS linux-arm64
RUN apt-get update && apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu && rm -rf /var/lib/apt/lists/*
RUN CGO_ENABLED=1 GOOS=linux GOARCH=arm64 \
    CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ \
    go build -ldflags="-s -w" \
    -o claude-resume-linux-arm64 ./cmd/claude-resume

# Export binaries
FROM scratch AS export
COPY --from=linux-amd64 /build/claude-resume-linux-amd64 ./dist/
COPY --from=linux-arm64 /build/claude-resume-linux-arm64 ./dist/