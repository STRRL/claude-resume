name: Release with Matrix Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-matrix:
    strategy:
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
          # Linux builds
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            cc: aarch64-linux-gnu-gcc
            cxx: aarch64-linux-gnu-g++
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: Install Linux cross-compilation tools
        if: matrix.goos == 'linux' && matrix.goarch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: |
          go build -ldflags="-s -w" -o claude-resume-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/claude-resume
          tar czf claude-resume-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz claude-resume-${{ matrix.goos }}-${{ matrix.goarch }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: claude-resume-${{ matrix.goos }}-${{ matrix.goarch }}
          path: claude-resume-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

  release:
    needs: build-matrix
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}